{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"%cd /kaggle/\n!git clone https://github.com/oobabooga/text-generation-webui.git\n%cd text-generation-webui\n!git checkout 5522584992c632d75d2389e9342793fd1dcc391d\n%cd ..","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-30T09:03:20.151289Z","iopub.execute_input":"2024-09-30T09:03:20.151633Z","iopub.status.idle":"2024-09-30T09:03:22.159101Z","shell.execute_reply.started":"2024-09-30T09:03:20.151599Z","shell.execute_reply":"2024-09-30T09:03:22.15797Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import os\n\nos.chdir(\"/kaggle/text-generation-webui/\")\n\nnew_content = \"--api --trust-remote-code\"\n\nwith open(\"CMD_FLAGS.txt\", \"w\") as file:\n    file.write(new_content)\n\nprint(\"文件修改完成。\")\n","metadata":{"execution":{"iopub.status.busy":"2024-09-30T09:03:22.160911Z","iopub.execute_input":"2024-09-30T09:03:22.161779Z","iopub.status.idle":"2024-09-30T09:03:22.168268Z","shell.execute_reply.started":"2024-09-30T09:03:22.16174Z","shell.execute_reply":"2024-09-30T09:03:22.167354Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!conda create -n textgen python=3.11 -y","metadata":{"execution":{"iopub.status.busy":"2024-09-30T09:03:22.171225Z","iopub.execute_input":"2024-09-30T09:03:22.171555Z","iopub.status.idle":"2024-09-30T09:04:25.74526Z","shell.execute_reply.started":"2024-09-30T09:03:22.171524Z","shell.execute_reply":"2024-09-30T09:04:25.744135Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!source /opt/conda/bin/activate textgen && pip3 install torch==2.2.2 torchvision==0.17.2 torchaudio==2.2.2 --index-url https://download.pytorch.org/whl/cu121\n!source /opt/conda/bin/activate textgen && conda install -y -c \"nvidia/label/cuda-12.1.1\" cuda-runtime","metadata":{"execution":{"iopub.status.busy":"2024-09-30T09:04:25.746617Z","iopub.execute_input":"2024-09-30T09:04:25.746918Z","iopub.status.idle":"2024-09-30T09:08:30.194193Z","shell.execute_reply.started":"2024-09-30T09:04:25.746887Z","shell.execute_reply":"2024-09-30T09:08:30.193104Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"%cd /kaggle/\n%cd text-generation-webui/instruction-templates\ncontent = r\"\"\"\ninstruction_template: |-\n  {{ '<bos>' }}\n  {% if messages[0]['role'] == 'system' %}\n      {{ '' }}\n  {% endif %}\n  {% for message in messages %}\n      {% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}\n          {{ '' }}\n      {% endif %}\n      {% if message['role'] == 'assistant' %}\n          {% set role = 'model' %}\n      {% else %}\n          {% set role = message['role'] %}\n      {% endif %}\n      {{ '<start_of_turn>' + role + '\\n' + message['content'] | trim + '<end_of_turn>\\n' }}\n  {% endfor %}\n\"\"\"\n\nwith open('gemma2.yaml', 'w') as file:\n    file.write(content)\n    \nprint(\"文件修改完成。\")","metadata":{"execution":{"iopub.status.busy":"2024-09-30T09:08:30.196003Z","iopub.execute_input":"2024-09-30T09:08:30.19635Z","iopub.status.idle":"2024-09-30T09:08:30.209501Z","shell.execute_reply.started":"2024-09-30T09:08:30.196315Z","shell.execute_reply":"2024-09-30T09:08:30.208438Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"%cd /kaggle/\n%cd text-generation-webui\n!source /opt/conda/bin/activate textgen && pip install -r requirements.txt\n!source /opt/conda/bin/activate textgen && pip install pydantic==2.8.2 pydantic-core==2.20.1 fastapi==0.112.4","metadata":{"execution":{"iopub.status.busy":"2024-09-30T09:08:30.211322Z","iopub.execute_input":"2024-09-30T09:08:30.211701Z","iopub.status.idle":"2024-09-30T09:12:17.214763Z","shell.execute_reply.started":"2024-09-30T09:08:30.211666Z","shell.execute_reply":"2024-09-30T09:12:17.213761Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install -U --force-reinstall llama-cpp-python --no-cache-dir","metadata":{"execution":{"iopub.status.busy":"2024-09-30T09:28:57.206812Z","iopub.execute_input":"2024-09-30T09:28:57.207585Z","iopub.status.idle":"2024-09-30T09:31:01.539971Z","shell.execute_reply.started":"2024-09-30T09:28:57.207548Z","shell.execute_reply":"2024-09-30T09:31:01.538787Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"Ngrok_token = \"2mmblvom5mzW5t4EQk2GAGCeEg2_2FvtkCnEraqmWDEAr7CZL\"  # ngrok token\nport1 = 7860\nport2 = 5000\nHOME_FOLDER = \"/kaggle\"\n\n!pip install pyngrok==6.1.0  # Downgrade to a version that supports ngrok tunneling\n\nfrom pyngrok import ngrok, conf\nimport gc\n\ngc.collect()\n\nif Ngrok_token:\n    try:\n        ngrok.set_auth_token(Ngrok_token)\n        ngrok.kill()\n        srv1 = ngrok.connect(port1)\n        srv2 = ngrok.connect(port2)\n        print(f\"Ngrok Tunnel 1 is active at: {srv1.public_url}\")\n        print(f\"Ngrok Tunnel 2 is active at: {srv2.public_url}\")\n        \n        # Replace this line with the command to start the text-generation-webui\n        !source /opt/conda/bin/activate textgen && python server.py --api --trust-remote-code\n        \n    except Exception as e:\n        print(f\"Error starting ngrok tunnel: {e}\")\nelse:\n    print('An ngrok token is required. You can get one on https://ngrok.com and paste it into the Ngrok_token field.')\n","metadata":{"execution":{"iopub.status.busy":"2024-09-30T09:31:01.542512Z","iopub.execute_input":"2024-09-30T09:31:01.542904Z"},"trusted":true},"execution_count":null,"outputs":[]}]}